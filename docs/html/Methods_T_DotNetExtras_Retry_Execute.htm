<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Execute Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:DotNetExtras.Retry.Execute" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotNetExtras.Retry" /><meta name="guid" content="Methods_T_DotNetExtras_Retry_Execute" /><meta name="tocFile" content="../toc/IDAAB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">DotNetExtras.Retry Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="PreliminaryContainer" class="level-left"><div class="level-item"><span class="tag is-warning is-medium">This is preliminary documentation and is subject to change.</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Execute Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAADASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry_1.htm">WithRetry(Action, IReloadable, Nullable<span id="LST6A96E7E5_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws any exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method 
            and re-executes the same code again.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry_3.htm">WithRetry(Action, Int32, Nullable<span id="LST6A96E7E5_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws any exception,
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry_4.htm">WithRetry(Action, TimeSpan, Nullable<span id="LST6A96E7E5_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws any exception,
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry.htm">WithRetry(Action, IReloadable, Int32, Nullable<span id="LST6A96E7E5_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws any exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry_2.htm">WithRetry(Action, IReloadable, TimeSpan, Nullable<span id="LST6A96E7E5_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws any exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_12" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_1.htm">WithRetry<span id="LST6A96E7E5_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E<span id="LST6A96E7E5_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, IReloadable, Nullable<span id="LST6A96E7E5_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_17" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method 
            and re-executes the same code again.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_3.htm">WithRetry<span id="LST6A96E7E5_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E<span id="LST6A96E7E5_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, Int32, Nullable<span id="LST6A96E7E5_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws a specific exception,
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_4.htm">WithRetry<span id="LST6A96E7E5_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E<span id="LST6A96E7E5_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, TimeSpan, Nullable<span id="LST6A96E7E5_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws a specific exception,
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_7.htm">WithRetry<span id="LST6A96E7E5_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Nullable<span id="LST6A96E7E5_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws any exception,
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_8.htm">WithRetry<span id="LST6A96E7E5_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TimeSpan, Nullable<span id="LST6A96E7E5_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws any exception,
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1.htm">WithRetry<span id="LST6A96E7E5_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E<span id="LST6A96E7E5_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, IReloadable, Int32, Nullable<span id="LST6A96E7E5_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_42" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_2.htm">WithRetry<span id="LST6A96E7E5_43" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E<span id="LST6A96E7E5_44" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Action, IReloadable, TimeSpan, Nullable<span id="LST6A96E7E5_45" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_46" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that does not return a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_47" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_5.htm">WithRetry<span id="LST6A96E7E5_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReloadable, Int32, Nullable<span id="LST6A96E7E5_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws any exception,
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__1_6.htm">WithRetry<span id="LST6A96E7E5_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReloadable, TimeSpan, Nullable<span id="LST6A96E7E5_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws any exception,
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__2_1.htm">WithRetry<span id="LST6A96E7E5_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E, T<span id="LST6A96E7E5_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReloadable, Nullable<span id="LST6A96E7E5_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_66" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method 
            and re-executes the same code again.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__2_3.htm">WithRetry<span id="LST6A96E7E5_67" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E, T<span id="LST6A96E7E5_68" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_69" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_70" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Nullable<span id="LST6A96E7E5_71" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_72" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws a specific exception,
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__2_4.htm">WithRetry<span id="LST6A96E7E5_73" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E, T<span id="LST6A96E7E5_74" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_75" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_76" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TimeSpan, Nullable<span id="LST6A96E7E5_77" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_78" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws a specific exception,
            re-executes it until it runs out of time.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__2.htm">WithRetry<span id="LST6A96E7E5_79" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E, T<span id="LST6A96E7E5_80" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_81" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_82" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReloadable, Int32, Nullable<span id="LST6A96E7E5_83" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_84" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_85" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of attempts.
            </td></tr><tr><td><a href="M_DotNetExtras_Retry_Execute_WithRetry__2_2.htm">WithRetry<span id="LST6A96E7E5_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>E, T<span id="LST6A96E7E5_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LST6A96E7E5_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST6A96E7E5_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IReloadable, TimeSpan, Nullable<span id="LST6A96E7E5_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TimeSpan<span id="LST6A96E7E5_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, ILogger)</a></td><td>
            Executes code that returns a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST6A96E7E5_92" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method and
            re-executes it until it runs out of time.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_DotNetExtras_Retry_Execute.htm">Execute Class</a></div><div><a href="N_DotNetExtras_Retry.htm">DotNetExtras.Retry Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2025 Alek Davis</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>