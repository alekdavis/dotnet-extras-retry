<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Execute.WithRetry&lt;E, T&gt;(Func&lt;T&gt;, IReloadable, Nullable&lt;TimeSpan&gt;, ILogger) Method</title><meta name="Title" content="WithRetry&lt;E, T&gt;(Func&lt;T&gt;, IReloadable, Nullable&lt;TimeSpan&gt;, ILogger)" /><meta name="Help.Id" content="M:DotNetExtras.Retry.Execute.WithRetry``2(System.Func{``1},DotNetExtras.Retry.IReloadable,System.Nullable{System.TimeSpan},Microsoft.Extensions.Logging.ILogger)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotNetExtras.Retry" /><meta name="guid" content="M_DotNetExtras_Retry_Execute_WithRetry__2_1" /><meta name="Description" content="Executes code that returns a value and, if the code throws a specific exception, calls the method and re-executes the same code again." /><meta name="tocFile" content="../toc/IDAAAAB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">DotNetExtras.Retry Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="PreliminaryContainer" class="level-left"><div class="level-item"><span class="tag is-warning is-medium">This is preliminary documentation and is subject to change.</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Execute<span id="LST7E3EA78D_0" data-languageSpecificText="cpp=::|nu=."></span>With<wbr />Retry<span id="LST7E3EA78D_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">E</span>, <span class="typeparameter">T</span><span id="LST7E3EA78D_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(Func<span id="LST7E3EA78D_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST7E3EA78D_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IReloadable, Nullable<span id="LST7E3EA78D_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Time<wbr />Span<span id="LST7E3EA78D_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, ILogger) Method</h1><div class="summary">
            Executes code that returns a value and, 
            if the code throws a specific exception,
            calls the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST7E3EA78D_7" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method 
            and re-executes the same code again.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_DotNetExtras_Retry.htm">DotNetExtras.Retry</a><br /><strong>Assembly:</strong> DotNetExtras.Retry (in DotNetExtras.Retry.dll) Version: 1.0.1<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> T <span class="identifier">WithRetry</span>&lt;E, T&gt;(
	<span class="identifier">Func</span>&lt;T&gt; <span class="parameter">code</span>,
	<span class="identifier">IReloadable</span> <span class="parameter">caller</span>,
	<span class="identifier">TimeSpan</span>? <span class="parameter">sleep</span> = <span class="keyword">null</span>,
	<span class="identifier">ILogger</span>? <span class="parameter">logger</span> = <span class="keyword">null</span>
)
<span class="keyword">where</span> E : <span class="identifier">Exception</span>
</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">code</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-1" target="_blank" rel="noopener noreferrer">Func</a><span id="LST7E3EA78D_8" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST7E3EA78D_9" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
            Code block to be executed.
            </dd><dt class="has-text-weight-normal"><span class="parameter">caller</span>  <a href="T_DotNetExtras_Retry_IReloadable.htm">IReloadable</a></dt><dd>
            Object implementing the <a href="M_DotNetExtras_Retry_IReloadable_Reload.htm">Reload<span id="LST7E3EA78D_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method
            that will be called on a retry.
            </dd><dt class="has-text-weight-normal"><span class="parameter">sleep</span>  <a href="https://learn.microsoft.com/dotnet/api/system.nullable-1" target="_blank" rel="noopener noreferrer">Nullable</a><span id="LST7E3EA78D_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.timespan" target="_blank" rel="noopener noreferrer">TimeSpan</a><span id="LST7E3EA78D_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  (Optional)</dt><dd>
            Defines sleep time before object reloading and retrying the code re-execution.
            </dd><dt class="has-text-weight-normal"><span class="parameter">logger</span>  <a href="https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger" target="_blank" rel="noopener noreferrer">ILogger</a>  (Optional)</dt><dd>
            Logs reload and retry event information.
            </dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">E</span></dt><dd>
            Exception type that triggers a reload and code re-execution.
            </dd><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd>
            Data type of the value returned by the code block.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="selflink"><span class="typeparameter">T</span></span><br />
            Value returned by the code block.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_DotNetExtras_Retry_Execute.htm">Execute Class</a></div><div><a href="Overload_DotNetExtras_Retry_Execute_WithRetry.htm">WithRetry Overload</a></div><div><a href="N_DotNetExtras_Retry.htm">DotNetExtras.Retry Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2025 Alek Davis</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>